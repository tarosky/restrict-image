{"version":3,"sources":["components/container.js"],"names":["$","Vue","component","template","data","computed","containerStyle","props","TaroimgContainer","width","endpoint","type","String","required","methods","deleteImage","method","url","this","beforeSend","xhr","response","self","image","id","fail","setRequestHeader","nonce","done","responseJSON","status","message","always","deleting","$emit","images","limit","uploadable","loading","directory","mounted","throwError","length","uploadErrorHandler","uploadHandler","push","event","callback","ajax","media","index","imageToDeleted","forEach","i","success","noImageToDelete","splice","jQuery"],"mappings":";;;;;;;;;;;CAMA,SAAAA,GAIEC,IAAAC,UAAA,gBAGEC,SAAAA,8YAWCC,KAZ4B,WAa7BC,OACEC,UAAAA,IACSD,UAGRC,eAAA,WAlB0B,OAoB7BC,MAAOC,iBAAAC,MAAA,QACEF,OAIPG,OACEC,KAAMC,OACNC,QAAAA,MA3ByBH,UA8B7BI,KAASF,OACPG,UAAAA,IAGEf,SACEgB,YAAQ,WACRC,IAAAA,EAAKC,KACLC,KAAAA,UAAY,EACVC,EAAAA,MACDJ,OAAA,SALHC,IAAAC,KAMQR,SAASW,eAATC,EAA+BC,MAAAC,GACrCF,WAAW,SAAAF,GACVK,EAAKC,iBAAA,aAAkBlB,iBAAAmB,UAExBC,KAAGP,SAASQ,EAATC,EAAyBT,GAC1BU,EAAAA,MAAAA,gBAAmBF,EAATP,EAAsBS,MAAhCP,GAAA,MACDC,KAAA,SAAAJ,GACDC,IAAAA,EAAW,GACVU,EAAOH,cAAUR,EAAAQ,aAAAE,UAClBT,EAAKW,EAALJ,aAAAE,SAEHT,EAAAY,MAAA,gBAAA,EAAAZ,EAAAC,MAAAC,GAAAO,KArBMC,OAAA,WA9BXV,EAAAW,UAAA,QAmEME,IAAAA,UAAQ,qBACRC,SAAAA,iZAIGhC,KAjB2B,WAuBlCC,OACEgC,UACED,MAAO,EAFDE,SAAA,IAMP/B,OA7B+BgC,WA+BlCC,KAAS5B,OACPC,UAAW,IAIbC,UAZEuB,WAAY,WAcZI,OAAAA,IAAYvB,KAAAkB,OAAAlB,KAASa,OAAQW,OAAAxB,KAAAkB,OAE5B1B,SAJM,WARL,OAAOF,iBAAiBE,SAAWQ,KAAKqB,YAgBzCC,QARM,WAUPG,KAAAA,aAAAA,SAAoBtB,EAAAS,EAAAV,OAGhBW,SAEFT,WAAKmB,SAAWV,GAfXb,KAAAgB,MAAA,WAAAH,IAmBLa,cAAW,SAAXrB,GACAL,KAAKoB,OAALO,KAAetB,IAGbN,mBAAUP,SAFLoC,EAAAzB,GAGLF,IAAAA,EAAY,GACVC,EAAIM,cAAkBL,EAAtBQ,aAAoCrB,UACrCuB,EAAAV,EAAAQ,aAAAE,SAEDT,KAAAA,WAAcD,IAGZ0B,aAAAA,SAAAA,GACD,IAAAzB,EAAAJ,KACFA,KAAEO,SAAK,EACNzB,EAAAgD,MACAhC,OAAGK,MACDU,IAAAA,KAAAA,SACDZ,WAAA,SAAAC,GACDE,EAAKmB,iBAAL,aAAAjC,iBAAAmB,UAEAL,KAAKgB,SAAUjB,EAAfS,EAAAV,GAnBFE,EAAAa,OAAAd,EAAA4B,MArBK3B,EAAAc,MAAAf,EAAAe,MA8BAW,GAcPhC,EAAaM,EAAAS,EAAAV,KAETK,KAAIyB,SAAQ7B,GACZ,IAAI8B,EAAAA,GACJ9B,EAAY+B,cAAQ/B,EAAgBgC,aAAEtB,UACpCA,EAAGP,EAAHK,aAAmBE,SAEjBoB,EAAAA,WAAAA,KACAnB,OAAA,WACDV,EAAAgB,SAAA,KAIFvB,YAAI,SAAAuC,EAAA9B,EAAAO,GACH,GAAAuB,EAAKnB,CACL,IAAAe,EAAA,KACDC,EAAA,KAfHjC,KAgBKiB,OAAAiB,QAAA,SAAA7B,EAAA8B,GACH,GAAKZ,IAAAA,EAAWV,GA9Db,OA+DJmB,EAAAG,EACFF,EAAA5B,GAhEM,IAuDA,OAAS2B,EACVhC,KAAKuB,WAAWjC,iBAAiB+C,kBAEjCrC,KAAKiB,OAAOqB,OAAON,EAAO,GAC1BhC,KAAKgB,MAAM,gBAAiBiB,SAG9BjC,KAAKuB,WAAWV,OA/J1B,CAuKG0B","file":"../../components/container.js","sourcesContent":["/*!\n * Image container\n *\n * wpdeps=taroimg-uploader\n */\n\n/*global TaroimgContainer: false*/\n\n(function ($) {\n\n  'use strict';\n\n  Vue.component( 'taroimg-item', {\n    template: `\n      <div :class=\"{'taroimg-item': true, 'deleting': deleting}\" :style=\"containerStyle\">\n          <button class=\"taroimg-item-delete\" type=\"button\" @click=\"deleteImage\">&times;</button>\n          <img class=\"taroimg-item-thumbnail\" :src=\"image.thumbnail\" :alt=\"image.title\" v-if=\"image.thumbnail\" />\n          <span class=\"taroimg-item-label\">{{image.name}}</span>\n      </div>\n    `,\n    data: function(){\n      return {\n        deleting: false,\n      }\n    },\n    computed: {\n      containerStyle: function() {\n        return {\n          width: TaroimgContainer.width + 'px',\n        };\n      }\n    },\n    props: {\n      image: {\n        type: Object,\n        default: null\n      },\n      endpoint: {\n        type: String,\n        required: true\n      }\n    },\n    methods: {\n      deleteImage: function(){\n        let self = this;\n        this.deleting = true;\n        $.ajax({\n          method: 'delete',\n          url: this.endpoint + '?attachment=' + self.image.id,\n          beforeSend: function ( xhr ) {\n            xhr.setRequestHeader( 'X-WP-Nonce', TaroimgContainer.nonce );\n          },\n        }).done(function(response, status, xhr){\n          self.$emit('delete-image', true, self.image.id, '');\n        }).fail(function(response){\n          let message = '';\n          if(response.responseJSON && response.responseJSON.message){\n            message = response.responseJSON.message;\n          }\n          self.$emit('delete-image', false, self.image.id, message);\n        }).always(function(){\n          self.deleting = false;\n        });\n      },\n    }\n  } );\n\n  Vue.component( 'taroimg-container', {\n    template: `\n    <div>\n        <div class=\"taroimg-list\">\n            <taroimg-item v-for=\"image in images\" :key=\"image.id\" :endpoint=\"endpoint\" :image=\"image\" @delete-image=\"deleteImage\">\n            </taroimg-item>\n        </div>\n        <taroimg-uploader v-if=\"uploadable\" :directory=\"directory\" @upload-finished=\"uploadHandler\" @upload-error=\"uploadErrorHandler\"></taroimg-uploader>\n    </div>\n    `,\n    data: function(){\n      return {\n        images: [],\n        limit: 0,\n        loading: false,\n      }\n    },\n    props: {\n      directory: {\n        type: String,\n        required: true\n      }\n    },\n    computed: {\n      uploadable: function(){\n        return 0 === this.limit || this.images.length < this.limit;\n      },\n      endpoint: function(){\n        return TaroimgContainer.endpoint + this.directory;\n      }\n    },\n    mounted: function(){\n      let self = this;\n      this.getImageList(function(response, status, xhr){\n      });\n    },\n    methods: {\n\n      throwError: function(message){\n        this.$emit('on-error', message);\n      },\n\n      uploadHandler: function(image){\n        this.images.push(image);\n      },\n\n      uploadErrorHandler: function(event, response){\n        let message = '';\n        if(response.responseJSON && response.responseJSON.message){\n          message = response.responseJSON.message;\n        }\n        self.throwError(message);\n      },\n\n      getImageList: function(callback) {\n        let self = this;\n        this.loading = true;\n        $.ajax({\n          method: 'get',\n          url: this.endpoint,\n          beforeSend: function ( xhr ) {\n            xhr.setRequestHeader( 'X-WP-Nonce', TaroimgContainer.nonce );\n          },\n        }).done(function(response, status, xhr){\n          self.images = response.media;\n          self.limit  = response.limit;\n          if(callback){\n            callback(response, status, xhr);\n          }\n        }).fail(function(response){\n          let message = '';\n          if(response.responseJSON && response.responseJSON.message){\n            message = response.responseJSON.message;\n          }\n          self.throwError( message );\n        }).always(function(){\n          self.loading = false;\n        });\n      },\n\n      deleteImage: function(success, id, message) {\n        if(success){\n          let index = null;\n          let imageToDeleted = null;\n          this.images.forEach(function(image, i){\n            if(id === image.id){\n              index = i;\n              imageToDeleted = image;\n              return false;\n            }\n          });\n          if(null === index){\n            this.throwError(TaroimgContainer.noImageToDelete);\n          }else{\n            this.images.splice(index, 1);\n            this.$emit('image-deleted', imageToDeleted);\n          }\n        }else{\n          this.throwError(message);\n        }\n      }\n    }\n  } );\n\n\n\n})(jQuery);\n"]}