{"version":3,"sources":["components/container.js"],"names":["$","Vue","component","template","data","computed","containerStyle","props","TaroimgContainer","width","endpoint","type","String","required","methods","deleteImage","this","deleting","protected","url","beforeSend","xhr","method","response","self","image","id","fail","setRequestHeader","nonce","done","responseJSON","status","message","always","$emit","images","limit","postId","default","loading","uploadable","Number","allowUpload","Boolean","mounted","throwError","length","directory","uploadErrorHandler","uploadHandler","push","test","ajax","getImageList","callback","media","index","imageToDeleted","forEach","i","success","noImageToDelete","splice","jQuery"],"mappings":"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","file":"../../components/container.js","sourcesContent":["/*!\n * Image container\n *\n * wpdeps=taroimg-uploader\n */\n\n/*global TaroimgContainer: false*/\n\n(function ($) {\n\n  'use strict';\n\n  Vue.component( 'taroimg-item', {\n    template: `\n      <div :class=\"{'taroimg-item': true, 'deleting': deleting}\" :style=\"containerStyle\">\n          <button v-if=\"!image.protected\" class=\"taroimg-item-delete\" type=\"button\" @click=\"deleteImage\">&times;</button>\n          <img class=\"taroimg-item-thumbnail\" :src=\"image.thumbnail\" :alt=\"image.title\" v-if=\"image.thumbnail\" />\n          <span class=\"taroimg-item-label\">{{image.name}}</span>\n      </div>\n    `,\n    data: function(){\n      return {\n        deleting: false,\n      };\n    },\n    computed: {\n      containerStyle: function() {\n        return {\n          width: TaroimgContainer.width + 'px',\n        };\n      }\n    },\n    props: {\n      image: {\n        type: Object,\n        default: null\n      },\n      endpoint: {\n        type: String,\n        required: true\n      }\n    },\n    methods: {\n      deleteImage: function(){\n        if(this.image.protected){\n          return;\n        }\n        let self = this;\n        this.deleting = true;\n        $.ajax({\n          method: 'delete',\n          url: this.endpoint + '?attachment=' + self.image.id,\n          beforeSend: function ( xhr ) {\n            xhr.setRequestHeader( 'X-WP-Nonce', TaroimgContainer.nonce );\n          },\n        }).done(function(response, status, xhr){\n          self.$emit('delete-image', true, self.image.id, '');\n        }).fail(function(response){\n          let message = '';\n          if(response.responseJSON && response.responseJSON.message){\n            message = response.responseJSON.message;\n          }\n          self.$emit('delete-image', false, self.image.id, message);\n        }).always(function(){\n          self.deleting = false;\n        });\n      },\n    }\n  } );\n\n  Vue.component( 'taroimg-container', {\n    template: `\n    <div>\n        <div class=\"taroimg-list\">\n            <taroimg-item v-for=\"image in images\" :key=\"image.id\" :endpoint=\"endpoint\" :image=\"image\" @delete-image=\"deleteImage\">\n            </taroimg-item>\n        </div>\n        <taroimg-uploader v-if=\"uploadable\" :directory=\"directory\" :post-id=\"postId\" @upload-finished=\"uploadHandler\" @upload-error=\"uploadErrorHandler\"></taroimg-uploader>\n    </div>\n    `,\n    data: function(){\n      return {\n        images: [],\n        limit: 0,\n        loading: false,\n      };\n    },\n    props: {\n      directory: {\n        type: String,\n        required: true\n      },\n      postId: {\n        type: Number,\n        required: false,\n        default: 0\n      },\n      allowUpload: {\n        type: Boolean,\n        required: false,\n        default: true,\n      }\n    },\n    computed: {\n      uploadable: function(){\n        return ( 0 === this.limit || this.images.length < this.limit ) && this.allowUpload;\n      },\n      endpoint: function(){\n        return TaroimgContainer.endpoint + this.directory;\n      }\n    },\n    mounted: function(){\n      let self = this;\n      this.getImageList(function(response, status, xhr){\n      });\n    },\n    methods: {\n\n      throwError: function(message){\n        this.$emit('on-error', message);\n      },\n\n      uploadHandler: function(image){\n        this.images.push(image);\n      },\n\n      uploadErrorHandler: function(response){\n        let message = '';\n        if(response.responseJSON && response.responseJSON.message){\n          message = response.responseJSON.message;\n        }\n        this.throwError(message);\n      },\n\n      getImageList: function(callback) {\n        let self = this;\n        this.loading = true;\n        let url = this.endpoint;\n        if(this.postId){\n          let glue = /\\?/.test(url) ? '&' : '?';\n          url = `${url}${glue}id=${this.postId}`;\n        }\n        $.ajax({\n          method: 'get',\n          url: url,\n          beforeSend: function ( xhr ) {\n            xhr.setRequestHeader( 'X-WP-Nonce', TaroimgContainer.nonce );\n          },\n        }).done(function(response, status, xhr){\n          self.images = response.media;\n          self.limit  = response.limit;\n          if(callback){\n            callback(response, status, xhr);\n          }\n        }).fail(function(response){\n          let message = '';\n          if(response.responseJSON && response.responseJSON.message){\n            message = response.responseJSON.message;\n          }\n          self.throwError( message );\n        }).always(function(){\n          self.loading = false;\n        });\n      },\n\n      deleteImage: function(success, id, message) {\n        if(success){\n          let index = null;\n          let imageToDeleted = null;\n          this.images.forEach(function(image, i){\n            if(id === image.id){\n              index = i;\n              imageToDeleted = image;\n              return false;\n            }\n          });\n          if(null === index){\n            this.throwError(TaroimgContainer.noImageToDelete);\n          }else{\n            this.images.splice(index, 1);\n            this.$emit('image-deleted', imageToDeleted);\n          }\n        }else{\n          this.throwError(message);\n        }\n      }\n    }\n  } );\n\n\n\n})(jQuery);\n"]}